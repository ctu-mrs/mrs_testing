name: simulation
root: ./
pre_window: export UAV_NAME=uav1; export UAV_TYPE=f450; export ODOMETRY_TYPE=hector; export WORLD_FILE=./world.yaml; export PX4_SIM_SPEED_FACTOR=1.0; export SENSORS="garmin_down"
startup_window: status
windows:
  - roscore:
      layout: even-vertical
      panes:
        - roscore
  - gazebo:
      layout: even-vertical
      panes:
        - waitForRos; roslaunch mrs_simulation simulation.launch gui:=true world_file:='$(find mrs_uav_testing)/worlds/hector_test.world'
  - rviz:
      layout: even-vertical
      panes:
        - waitForSimulation; roslaunch mrs_uav_testing rviz.launch name:=hector_test
        - waitForSimulation; roslaunch mrs_rviz_plugins load_robot.launch
        - waitForSimulation; roslaunch mrs_rviz_plugins rviz_interface.launch
  # - juggler:
  #     layout: even-vertical
  #     panes:
  #       - waitForSimulation; rosrun plotjuggler PlotJuggler -l ../../plot_juggler/hector_test.xml
  - spawn:
      layout: even-vertical
      panes:
        - waitForSimulation; rosservice call /mrs_drone_spawner/spawn "1 $UAV_TYPE --enable-rangefinder --enable-ground-truth --enable-rplidar --use-gpu-ray --pos_file `pwd`/init_pos.yaml"
  - status:
      layout: even-vertical
      panes:
        - waitForOdometry; roslaunch mrs_uav_status status.launch
  - bumper:
      layout: tiled
      panes:
        - waitForOdometry; roslaunch mrs_bumper bumper.launch
  - hector_slam:
      layout: even-vertical
      panes:
        - waitForOdometry; roslaunch mrs_uav_general hector_slam.launch
  - control:
      layout: even-vertical
      panes:
        - waitForOdometry; roslaunch mrs_uav_general core.launch DEBUG:=false config_uav_manager:=./custom_configs/uav_manager.yaml config_odometry:=./custom_configs/odometry.yaml config_control_manager:=./custom_configs/control_manager.yaml config_constraint_manager:=./custom_configs/constraint_manager.yaml
  # - random_flier:
  #     layout: tiled
  #     panes:
  #       - waitForOdometry; roslaunch mrs_uav_testing random_flier.launch
  #       # - waitForOdometry; roslaunch mrs_uav_testing trajectory_random_flier.launch
  - control_test:
      layout: tiled
      panes:
        - waitForControl; roslaunch mrs_uav_testing control_test.launch custom_config:=./custom_configs/control_test.yaml
  - takeoff:
      layout: tiled
      panes:
        - waitForRos; roslaunch mrs_uav_general automatic_start.launch
        - 'waitForControl;
          rosservice call /$UAV_NAME/mavros/cmd/arming 1;
          sleep 0.1;
          rosservice call /$UAV_NAME/mavros/set_mode 0 offboard'
  - gazebo_camera_follow:
      layout: even-vertical
      panes:
        - waitForOdometry; gz camera -c gzclient_camera -f uav1; history -s gz camera -c gzclient_camera -f uav1
        - waitForControl; sleep 3; ~/.i3/layout_manager.sh layout.json
