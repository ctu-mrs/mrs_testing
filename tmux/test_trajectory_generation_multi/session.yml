name: simulation
root: ./
startup_window: mrs_simulator
pre_window: export RUN_TYPE=simulation; export ROS_HOSTNAME=localhost; export BOND=false; export UAV_TYPE=t650; export SENSORS="garmin_down"; export N="4"; export UAVS=`for ((a=1;$a-($N+1);a=$a+1)); do echo $a; done`; export PLATFORM_CONFIG=`rospack find mrs_multirotor_simulator`/config/mrs_uav_system/$UAV_TYPE.yaml; export CUSTOM_CONFIG=./config/custom_config.yaml; export NETWORK_CONFIG=./config/network_config.yaml
windows:
  - roscore:
      layout: tiled
      panes:
        - roscore
  - mrs_simulator:
      layout: tiled
      panes:
        - waitForRos; roslaunch mrs_multirotor_simulator multirotor_simulator.launch custom_config:=./config/simulator.yaml
        - if (( $N < 1 )); then exit; fi; export UAV_NAME=uav1; waitForTime; roslaunch mrs_multirotor_simulator hw_api.launch custom_config:=./config/hw_api_mrs_sim.yaml
        - if (( $N < 2 )); then exit; fi; export UAV_NAME=uav2; waitForTime; roslaunch mrs_multirotor_simulator hw_api.launch custom_config:=./config/hw_api_mrs_sim.yaml
        - if (( $N < 3 )); then exit; fi; export UAV_NAME=uav3; waitForTime; roslaunch mrs_multirotor_simulator hw_api.launch custom_config:=./config/hw_api_mrs_sim.yaml
        - if (( $N < 4 )); then exit; fi; export UAV_NAME=uav4; waitForTime; roslaunch mrs_multirotor_simulator hw_api.launch custom_config:=./config/hw_api_mrs_sim.yaml
        - if (( $N < 5 )); then exit; fi; export UAV_NAME=uav5; waitForTime; roslaunch mrs_multirotor_simulator hw_api.launch custom_config:=./config/hw_api_mrs_sim.yaml
        - if (( $N < 6 )); then exit; fi; export UAV_NAME=uav6; waitForTime; roslaunch mrs_multirotor_simulator hw_api.launch custom_config:=./config/hw_api_mrs_sim.yaml
        - if (( $N < 7 )); then exit; fi; export UAV_NAME=uav7; waitForTime; roslaunch mrs_multirotor_simulator hw_api.launch custom_config:=./config/hw_api_mrs_sim.yaml
        - if (( $N < 8 )); then exit; fi; export UAV_NAME=uav8; waitForTime; roslaunch mrs_multirotor_simulator hw_api.launch custom_config:=./config/hw_api_mrs_sim.yaml
        - if (( $N < 9 )); then exit; fi; export UAV_NAME=uav9; waitForTime; roslaunch mrs_multirotor_simulator hw_api.launch custom_config:=./config/hw_api_mrs_sim.yaml
        - if (( $N < 10 )); then exit; fi; export UAV_NAME=uav10; waitForTime; roslaunch mrs_multirotor_simulator hw_api.launch custom_config:=./config/hw_api_mrs_sim.yaml
        - if (( $N < 11 )); then exit; fi; export UAV_NAME=uav11; waitForTime; roslaunch mrs_multirotor_simulator hw_api.launch custom_config:=./config/hw_api_mrs_sim.yaml
        - if (( $N < 12 )); then exit; fi; export UAV_NAME=uav12; waitForTime; roslaunch mrs_multirotor_simulator hw_api.launch custom_config:=./config/hw_api_mrs_sim.yaml
  # - gazebo:
  #     layout: tiled
  #     panes:
  #       - waitForRos; roslaunch mrs_simulation simulation.launch world_name:=grass_plane gui:=true
  #       - waitForControl; gz camera -c gzclient_camera -f uav1; history -s gz camera -c gzclient_camera -f uav1
  #       - waitForGazebo; rosservice call /mrs_drone_spawner/spawn "$UAVS $UAV_TYPE --enable-rangefinder --pos_file `pwd`/init_pos.yaml"
  #       - if (( $N < 1 )); then exit; fi; export UAV_NAME=uav1; waitForTime; roslaunch mrs_uav_px4_api api.launch
  #       - if (( $N < 2 )); then exit; fi; export UAV_NAME=uav2; waitForTime; roslaunch mrs_uav_px4_api api.launch
  #       - if (( $N < 3 )); then exit; fi; export UAV_NAME=uav3; waitForTime; roslaunch mrs_uav_px4_api api.launch
  #       - if (( $N < 4 )); then exit; fi; export UAV_NAME=uav4; waitForTime; roslaunch mrs_uav_px4_api api.launch
  #       - if (( $N < 5 )); then exit; fi; export UAV_NAME=uav5; waitForTime; roslaunch mrs_uav_px4_api api.launch
  #       - if (( $N < 6 )); then exit; fi; export UAV_NAME=uav6; waitForTime; roslaunch mrs_uav_px4_api api.launch
  #       - if (( $N < 7 )); then exit; fi; export UAV_NAME=uav7; waitForTime; roslaunch mrs_uav_px4_api api.launch
  #       - if (( $N < 8 )); then exit; fi; export UAV_NAME=uav8; waitForTime; roslaunch mrs_uav_px4_api api.launch
  #       - if (( $N < 9 )); then exit; fi; export UAV_NAME=uav9; waitForTime; roslaunch mrs_uav_px4_api api.launch
  #       - if (( $N < 10 )); then exit; fi; export UAV_NAME=uav10; waitForTime; roslaunch mrs_uav_px4_api api.launch
  #       - if (( $N < 11 )); then exit; fi; export UAV_NAME=uav11; waitForTime; roslaunch mrs_uav_px4_api api.launch
  #       - if (( $N < 12 )); then exit; fi; export UAV_NAME=uav12; waitForTime; roslaunch mrs_uav_px4_api api.launch
  - tf_connector:
      layout: tiled
      panes:
        - waitForHw; roslaunch tf_connector tf_connector.launch custom_config:=./config/tf_connector.yaml
  - control:
      layout: tiled
      panes:
        - if (( $N < 1 )); then exit; fi; export UAV_NAME=uav1; waitForHw; roslaunch mrs_uav_core core.launch world_config:=./world_$UAV_NAME.yaml
        - if (( $N < 2 )); then exit; fi; export UAV_NAME=uav2; waitForHw; roslaunch mrs_uav_core core.launch world_config:=./world_$UAV_NAME.yaml
        - if (( $N < 3 )); then exit; fi; export UAV_NAME=uav3; waitForHw; roslaunch mrs_uav_core core.launch world_config:=./world_$UAV_NAME.yaml
        - if (( $N < 4 )); then exit; fi; export UAV_NAME=uav4; waitForHw; roslaunch mrs_uav_core core.launch world_config:=./world_$UAV_NAME.yaml
        - if (( $N < 5 )); then exit; fi; export UAV_NAME=uav5; waitForHw; roslaunch mrs_uav_core core.launch world_config:=./world_$UAV_NAME.yaml
        - if (( $N < 6 )); then exit; fi; export UAV_NAME=uav6; waitForHw; roslaunch mrs_uav_core core.launch world_config:=./world_$UAV_NAME.yaml
        - if (( $N < 7 )); then exit; fi; export UAV_NAME=uav7; waitForHw; roslaunch mrs_uav_core core.launch world_config:=./world_$UAV_NAME.yaml
        - if (( $N < 8 )); then exit; fi; export UAV_NAME=uav8; waitForHw; roslaunch mrs_uav_core core.launch world_config:=./world_$UAV_NAME.yaml
        - if (( $N < 9 )); then exit; fi; export UAV_NAME=uav9; waitForHw; roslaunch mrs_uav_core core.launch world_config:=./world_$UAV_NAME.yaml
        - if (( $N < 10 )); then exit; fi; export UAV_NAME=uav10; waitForHw; roslaunch mrs_uav_core core.launch world_config:=./world_$UAV_NAME.yaml
        - if (( $N < 11 )); then exit; fi; export UAV_NAME=uav11; waitForHw; roslaunch mrs_uav_core core.launch world_config:=./world_$UAV_NAME.yaml
        - if (( $N < 12 )); then exit; fi; export UAV_NAME=uav12; waitForHw; roslaunch mrs_uav_core core.launch world_config:=./world_$UAV_NAME.yaml
  - random_flier:
      layout: tiled
      panes:
        - if (( $N < 1 )); then exit; fi; export UAV_NAME=uav1; waitForHw; roslaunch mrs_uav_testing path_random_flier.launch custom_config:=./config/path_random_flier.yaml
        - if (( $N < 2 )); then exit; fi; export UAV_NAME=uav2; waitForHw; roslaunch mrs_uav_testing path_random_flier.launch custom_config:=./config/path_random_flier.yaml
        - if (( $N < 3 )); then exit; fi; export UAV_NAME=uav3; waitForHw; roslaunch mrs_uav_testing path_random_flier.launch custom_config:=./config/path_random_flier.yaml
        - if (( $N < 4 )); then exit; fi; export UAV_NAME=uav4; waitForHw; roslaunch mrs_uav_testing path_random_flier.launch custom_config:=./config/path_random_flier.yaml
        - if (( $N < 5 )); then exit; fi; export UAV_NAME=uav5; waitForHw; roslaunch mrs_uav_testing path_random_flier.launch custom_config:=./config/path_random_flier.yaml
        - if (( $N < 6 )); then exit; fi; export UAV_NAME=uav6; waitForHw; roslaunch mrs_uav_testing path_random_flier.launch custom_config:=./config/path_random_flier.yaml
        - if (( $N < 7 )); then exit; fi; export UAV_NAME=uav7; waitForHw; roslaunch mrs_uav_testing path_random_flier.launch custom_config:=./config/path_random_flier.yaml
        - if (( $N < 8 )); then exit; fi; export UAV_NAME=uav8; waitForHw; roslaunch mrs_uav_testing path_random_flier.launch custom_config:=./config/path_random_flier.yaml
        - if (( $N < 9 )); then exit; fi; export UAV_NAME=uav9; waitForHw; roslaunch mrs_uav_testing path_random_flier.launch custom_config:=./config/path_random_flier.yaml
        - if (( $N < 10 )); then exit; fi; export UAV_NAME=uav10; waitForHw; roslaunch mrs_uav_testing path_random_flier.launch custom_config:=./config/path_random_flier.yaml
        - if (( $N < 11 )); then exit; fi; export UAV_NAME=uav11; waitForHw; roslaunch mrs_uav_testing path_random_flier.launch custom_config:=./config/path_random_flier.yaml
        - if (( $N < 12 )); then exit; fi; export UAV_NAME=uav12; waitForHw; roslaunch mrs_uav_testing path_random_flier.launch custom_config:=./config/path_random_flier.yaml
  - automatic_start:
      layout: tiled
      panes:
        - if (( $N < 1 )); then exit; fi; export UAV_NAME=uav1; waitForHw; roslaunch mrs_uav_autostart automatic_start.launch
        - if (( $N < 2 )); then exit; fi; export UAV_NAME=uav2; waitForHw; roslaunch mrs_uav_autostart automatic_start.launch
        - if (( $N < 3 )); then exit; fi; export UAV_NAME=uav3; waitForHw; roslaunch mrs_uav_autostart automatic_start.launch
        - if (( $N < 4 )); then exit; fi; export UAV_NAME=uav4; waitForHw; roslaunch mrs_uav_autostart automatic_start.launch
        - if (( $N < 5 )); then exit; fi; export UAV_NAME=uav5; waitForHw; roslaunch mrs_uav_autostart automatic_start.launch
        - if (( $N < 6 )); then exit; fi; export UAV_NAME=uav6; waitForHw; roslaunch mrs_uav_autostart automatic_start.launch
        - if (( $N < 7 )); then exit; fi; export UAV_NAME=uav7; waitForHw; roslaunch mrs_uav_autostart automatic_start.launch
        - if (( $N < 8 )); then exit; fi; export UAV_NAME=uav8; waitForHw; roslaunch mrs_uav_autostart automatic_start.launch
        - if (( $N < 9 )); then exit; fi; export UAV_NAME=uav9; waitForHw; roslaunch mrs_uav_autostart automatic_start.launch
        - if (( $N < 10 )); then exit; fi; export UAV_NAME=uav10; waitForHw; roslaunch mrs_uav_autostart automatic_start.launch
        - if (( $N < 11 )); then exit; fi; export UAV_NAME=uav11; waitForHw; roslaunch mrs_uav_autostart automatic_start.launch
        - if (( $N < 12 )); then exit; fi; export UAV_NAME=uav12; waitForHw; roslaunch mrs_uav_autostart automatic_start.launch
  - takeoff:
      layout: tiled
      panes:
        - 'if (( $N < 1 )); then exit; fi; export UAV_NAME=uav1; waitForControl; rosservice call /$UAV_NAME/hw_api/arming 1; sleep 2; rosservice call /$UAV_NAME/hw_api/offboard'
        - 'if (( $N < 2 )); then exit; fi; export UAV_NAME=uav2; waitForControl; rosservice call /$UAV_NAME/hw_api/arming 1; sleep 2; rosservice call /$UAV_NAME/hw_api/offboard'
        - 'if (( $N < 3 )); then exit; fi; export UAV_NAME=uav3; waitForControl; rosservice call /$UAV_NAME/hw_api/arming 1; sleep 2; rosservice call /$UAV_NAME/hw_api/offboard'
        - 'if (( $N < 4 )); then exit; fi; export UAV_NAME=uav4; waitForControl; rosservice call /$UAV_NAME/hw_api/arming 1; sleep 2; rosservice call /$UAV_NAME/hw_api/offboard'
        - 'if (( $N < 5 )); then exit; fi; export UAV_NAME=uav5; waitForControl; rosservice call /$UAV_NAME/hw_api/arming 1; sleep 2; rosservice call /$UAV_NAME/hw_api/offboard'
        - 'if (( $N < 6 )); then exit; fi; export UAV_NAME=uav6; waitForControl; rosservice call /$UAV_NAME/hw_api/arming 1; sleep 2; rosservice call /$UAV_NAME/hw_api/offboard'
        - 'if (( $N < 7 )); then exit; fi; export UAV_NAME=uav7; waitForControl; rosservice call /$UAV_NAME/hw_api/arming 1; sleep 2; rosservice call /$UAV_NAME/hw_api/offboard'
        - 'if (( $N < 8 )); then exit; fi; export UAV_NAME=uav8; waitForControl; rosservice call /$UAV_NAME/hw_api/arming 1; sleep 2; rosservice call /$UAV_NAME/hw_api/offboard'
        - 'if (( $N < 9 )); then exit; fi; export UAV_NAME=uav9; waitForControl; rosservice call /$UAV_NAME/hw_api/arming 1; sleep 2; rosservice call /$UAV_NAME/hw_api/offboard'
        - 'if (( $N < 10 )); then exit; fi; export UAV_NAME=uav10; waitForControl; rosservice call /$UAV_NAME/hw_api/arming 1; sleep 2; rosservice call /$UAV_NAME/hw_api/offboard'
        - 'if (( $N < 11 )); then exit; fi; export UAV_NAME=uav11; waitForControl; rosservice call /$UAV_NAME/hw_api/arming 1; sleep 2; rosservice call /$UAV_NAME/hw_api/offboard'
        - 'if (( $N < 12 )); then exit; fi; export UAV_NAME=uav12; waitForControl; rosservice call /$UAV_NAME/hw_api/arming 1; sleep 2; rosservice call /$UAV_NAME/hw_api/offboard'
  - rviz:
      layout: tiled
      panes:
        - export UAV_NAME=uav1; waitForControl; roslaunch mrs_uav_testing rviz.launch name:=trajectory_generation_multi
  - layout:
      layout: tiled
      panes:
        - waitForControl; sleep 3; ~/.i3/layout_manager.sh ./layout.json
