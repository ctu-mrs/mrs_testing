name: simulation
root: ./
startup_window: flip
pre_window: export UAV_NAME=uav1; export RUN_TYPE=simulation; export UAV_TYPE=t650; export WORLD_FILE=./world.yaml; export SENSORS="garmin_down"
windows:
  - roscore:
      layout: tiled
      panes:
        - roscore
  - gazebo:
      layout: tiled
      panes:
        - waitForRos; roslaunch mrs_simulation simulation.launch world_name:=grass_plane gui:=true
        - waitForOdometry; gz camera -c gzclient_camera -f uav1; history -s gz camera -c gzclient_camera -f uav1
  - status:
      layout: tiled
      panes:
        - waitForSimulation; roslaunch mrs_uav_status status.launch
  - spawn:
      layout: tiled
      panes:
        - waitForSimulation; rosservice call /mrs_drone_spawner/spawn "1 --f330 --enable-rangefinder --enable-ground-truth --pos_file `pwd`/init_pos.yaml"
        - waitForSimulation; rosservice call /mrs_drone_spawner/spawn "2 --f450 --enable-rangefinder --enable-ground-truth --pos_file `pwd`/init_pos.yaml"
        - waitForSimulation; rosservice call /mrs_drone_spawner/spawn "3 --f550 --enable-rangefinder --enable-ground-truth --pos_file `pwd`/init_pos.yaml"
        - waitForSimulation; rosservice call /mrs_drone_spawner/spawn "4 --x500 --enable-rangefinder --enable-ground-truth --pos_file `pwd`/init_pos.yaml"
        - waitForSimulation; rosservice call /mrs_drone_spawner/spawn "5 --t650 --enable-rangefinder --enable-ground-truth --pos_file `pwd`/init_pos.yaml"
        - waitForSimulation; rosservice call /mrs_drone_spawner/spawn "6 --eaglemk2 --enable-rangefinder --model-package eagle_gazebo_resources --enable-ground-truth --pos_file `pwd`/init_pos.yaml"
        - waitForSimulation; rosservice call /mrs_drone_spawner/spawn "7 --brus --enable-rangefinder --model-package brus_gazebo_resources --enable-ground-truth --pos_file `pwd`/init_pos.yaml"
  - control:
      layout: tiled
      panes:
        - export UAV_TYPE=f330; export UAV_NAME=uav1; waitForOdometry; roslaunch mrs_uav_general core.launch config_constraint_manager:=./custom_configs/constraint_manager.yaml config_uav_manager:=./custom_configs/uav_manager.yaml config_gain_manager:=./custom_configs/gain_manager.yaml config_control_manager:=./custom_configs/control_manager.yaml config_odometry:=./custom_configs/odometry.yaml config_se3_controller:=./custom_configs/se3_controller.yaml config_mpc_tracker:=./custom_configs/mpc_tracker.yaml
        - export UAV_TYPE=f450; export UAV_NAME=uav2; waitForOdometry; roslaunch mrs_uav_general core.launch config_constraint_manager:=./custom_configs/constraint_manager.yaml config_uav_manager:=./custom_configs/uav_manager.yaml config_gain_manager:=./custom_configs/gain_manager.yaml config_control_manager:=./custom_configs/control_manager.yaml config_odometry:=./custom_configs/odometry.yaml config_se3_controller:=./custom_configs/se3_controller.yaml config_mpc_tracker:=./custom_configs/mpc_tracker.yaml
        - export UAV_TYPE=f550; export UAV_NAME=uav3; waitForOdometry; roslaunch mrs_uav_general core.launch config_constraint_manager:=./custom_configs/constraint_manager.yaml config_uav_manager:=./custom_configs/uav_manager.yaml config_gain_manager:=./custom_configs/gain_manager.yaml config_control_manager:=./custom_configs/control_manager.yaml config_odometry:=./custom_configs/odometry.yaml config_se3_controller:=./custom_configs/se3_controller.yaml config_mpc_tracker:=./custom_configs/mpc_tracker.yaml
        - export UAV_TYPE=x500; export UAV_NAME=uav4; waitForOdometry; roslaunch mrs_uav_general core.launch config_constraint_manager:=./custom_configs/constraint_manager.yaml config_uav_manager:=./custom_configs/uav_manager.yaml config_gain_manager:=./custom_configs/gain_manager.yaml config_control_manager:=./custom_configs/control_manager.yaml config_odometry:=./custom_configs/odometry.yaml config_se3_controller:=./custom_configs/se3_controller.yaml config_mpc_tracker:=./custom_configs/mpc_tracker.yaml
        - export UAV_TYPE=t650; export UAV_NAME=uav5; waitForOdometry; roslaunch mrs_uav_general core.launch config_constraint_manager:=./custom_configs/constraint_manager.yaml config_uav_manager:=./custom_configs/uav_manager.yaml config_gain_manager:=./custom_configs/gain_manager.yaml config_control_manager:=./custom_configs/control_manager.yaml config_odometry:=./custom_configs/odometry.yaml config_se3_controller:=./custom_configs/se3_controller.yaml config_mpc_tracker:=./custom_configs/mpc_tracker.yaml
        - export UAV_TYPE=brus; export UAV_NAME=uav6; waitForOdometry; roslaunch mrs_uav_general core.launch config_constraint_manager:=./custom_configs/constraint_manager.yaml config_uav_manager:=./custom_configs/uav_manager.yaml config_gain_manager:=./custom_configs/gain_manager.yaml config_control_manager:=./custom_configs/control_manager.yaml config_odometry:=./custom_configs/odometry.yaml config_se3_controller:=./custom_configs/se3_controller.yaml config_mpc_tracker:=./custom_configs/mpc_tracker.yaml
        - export UAV_TYPE=brus; export UAV_NAME=uav7; waitForOdometry; roslaunch mrs_uav_general core.launch config_constraint_manager:=./custom_configs/constraint_manager.yaml config_uav_manager:=./custom_configs/uav_manager.yaml config_gain_manager:=./custom_configs/gain_manager.yaml config_control_manager:=./custom_configs/control_manager.yaml config_odometry:=./custom_configs/odometry.yaml config_se3_controller:=./custom_configs/se3_controller.yaml config_mpc_tracker:=./custom_configs/mpc_tracker.yaml
  - flip:
      layout: tiled
      synchronize: after
      panes:
        - 'history -s rosservice call /uav1/control_manager/flip_tracker/flip;
          history -s rosservice call /uav1/control_manager/switch_tracker FlipTracker'
        - 'history -s rosservice call /uav2/control_manager/flip_tracker/flip;
          history -s rosservice call /uav2/control_manager/switch_tracker FlipTracker'
        - 'history -s rosservice call /uav3/control_manager/flip_tracker/flip;
          history -s rosservice call /uav3/control_manager/switch_tracker FlipTracker'
        - 'history -s rosservice call /uav4/control_manager/flip_tracker/flip;
          history -s rosservice call /uav4/control_manager/switch_tracker FlipTracker'
        - 'history -s rosservice call /uav5/control_manager/flip_tracker/flip;
          history -s rosservice call /uav5/control_manager/switch_tracker FlipTracker'
        - 'history -s rosservice call /uav6/control_manager/flip_tracker/flip;
          history -s rosservice call /uav6/control_manager/switch_tracker FlipTracker'
        - 'history -s rosservice call /uav7/control_manager/flip_tracker/flip;
          history -s rosservice call /uav7/control_manager/switch_tracker FlipTracker'
  - automatic_start:
      layout: tiled
      panes:
        - export UAV_NAME=uav1; waitForSimulation; roslaunch mrs_uav_general automatic_start.launch
        - export UAV_NAME=uav2; waitForSimulation; roslaunch mrs_uav_general automatic_start.launch
        - export UAV_NAME=uav3; waitForSimulation; roslaunch mrs_uav_general automatic_start.launch
        - export UAV_NAME=uav4; waitForSimulation; roslaunch mrs_uav_general automatic_start.launch
        - export UAV_NAME=uav5; waitForSimulation; roslaunch mrs_uav_general automatic_start.launch
        - export UAV_NAME=uav6; waitForSimulation; roslaunch mrs_uav_general automatic_start.launch
        - export UAV_NAME=uav7; waitForSimulation; roslaunch mrs_uav_general automatic_start.launch
  - takeoff:
      layout: tiled
      panes:
        - 'export UAV_NAME=uav1;
          waitForControl;
          rosservice call /$UAV_NAME/mavros/cmd/arming 1;
          sleep 2;
          rosservice call /$UAV_NAME/mavros/set_mode 0 offboard'
        - 'export UAV_NAME=uav2;
          waitForControl;
          rosservice call /$UAV_NAME/mavros/cmd/arming 1;
          sleep 2;
          rosservice call /$UAV_NAME/mavros/set_mode 0 offboard'
        - 'export UAV_NAME=uav3;
          waitForControl;
          rosservice call /$UAV_NAME/mavros/cmd/arming 1;
          sleep 2;
          rosservice call /$UAV_NAME/mavros/set_mode 0 offboard'
        - 'export UAV_NAME=uav4;
          waitForControl;
          rosservice call /$UAV_NAME/mavros/cmd/arming 1;
          sleep 2;
          rosservice call /$UAV_NAME/mavros/set_mode 0 offboard'
        - 'export UAV_NAME=uav5;
          waitForControl;
          rosservice call /$UAV_NAME/mavros/cmd/arming 1;
          sleep 2;
          rosservice call /$UAV_NAME/mavros/set_mode 0 offboard'
        - 'export UAV_NAME=uav6;
          waitForControl;
          rosservice call /$UAV_NAME/mavros/cmd/arming 1;
          sleep 2;
          rosservice call /$UAV_NAME/mavros/set_mode 0 offboard'
        - 'export UAV_NAME=uav7;
          waitForControl;
          rosservice call /$UAV_NAME/mavros/cmd/arming 1;
          sleep 2;
          rosservice call /$UAV_NAME/mavros/set_mode 0 offboard'
